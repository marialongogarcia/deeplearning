{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "kernelspec": {
      "display_name": "Python 3",
      "language": "python",
      "name": "python3"
    },
    "language_info": {
      "codemirror_mode": {
        "name": "ipython",
        "version": 3
      },
      "file_extension": ".py",
      "mimetype": "text/x-python",
      "name": "python",
      "nbconvert_exporter": "python",
      "pygments_lexer": "ipython3",
      "version": "3.8.5"
    },
    "colab": {
      "provenance": [],
      "include_colab_link": true
    },
    "accelerator": "TPU"
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/marialongogarcia/deeplearning/blob/main/EjercicioRegularizadores\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "Ejg7Msp7rbkk"
      },
      "source": [
        "# Ejercicio con regularizadores"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "%tensorflow_version 2.x\n",
        "import tensorflow as tf\n",
        "from tensorflow import keras\n",
        "print(tf.keras.__version__)\n",
        "print(\"GPU Available:\", tf.config.list_physical_devices('GPU'))\n",
        "print(tf.__version__)\n",
        "from keras.datasets import mnist\n",
        "from keras import models\n",
        "from keras import layers\n",
        "import numpy as np\n",
        "import matplotlib.pyplot as plt\n",
        "from keras import regularizers"
      ],
      "metadata": {
        "id": "BSivef1i532C",
        "outputId": "dd2bde15-39ca-478a-e588-8b4ad972ec51",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "execution_count": 1,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Colab only includes TensorFlow 2.x; %tensorflow_version has no effect.\n",
            "2.9.0\n",
            "GPU Available: []\n",
            "2.9.2\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "(train_images, train_labels), (test_images, test_labels) = mnist.load_data()"
      ],
      "metadata": {
        "id": "3t3R6gU9-wUy",
        "outputId": "b7163f1f-bda6-4795-b6da-5cf2b004a772",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "execution_count": 2,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Downloading data from https://storage.googleapis.com/tensorflow/tf-keras-datasets/mnist.npz\n",
            "11490434/11490434 [==============================] - 0s 0us/step\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Prepara con reshape y normaliza las imágenes tanto de entrenamiento como de test\n",
        "train_images = train_images.reshape((60000, 28 * 28))\n",
        "test_images = test_images.reshape((10000, 28 * 28))\n",
        "\n",
        "train_images = train_images.astype('float32') / 255\n",
        "test_images = test_images.astype('float32') / 255"
      ],
      "metadata": {
        "id": "H6n5NeSz0U1d"
      },
      "execution_count": 3,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# Crear un subconjunto de imágenes de entrenamiento que llamaré \n",
        "# validation_images, para hacer las validaciones, con las 10000 últimas imágenes \n",
        "# del set de datos de entrenamiento (train_images) (obviamente, lo mismo con las\n",
        "# etiquetas correspondientes -> validation_labels). Deja preparadas las 50K \n",
        "# primeras imágenes y etiquetas para entrenamiento (train_images y train_labels)\n",
        "\n",
        "\n",
        "validation_images = train_images[50000:]\n",
        "validation_labels = train_labels[50000:]\n",
        "\n",
        "train_labels = train_labels[:50000]\n",
        "train_images = train_images[:50000]\n"
      ],
      "metadata": {
        "id": "NKoZGyap0XAj"
      },
      "execution_count": 4,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "  def crea_modelo(regularizador):\n",
        "    model=models.Sequential()\n",
        "\n",
        "    if regularizador == 0:\n",
        "      model.add(layers.Dense(512, activation='relu', input_shape=(28*28,)))\n",
        "\n",
        "    elif regularizador == 1:\n",
        "      model.add(layers.Dense(512, kernel_regularizer=regularizers.l1(0.001), activation='relu', input_shape=(28*28,)))\n",
        "\n",
        "    elif regularizador == 2:\n",
        "      model.add(layers.Dense(512, kernel_regularizer=regularizers.l2(0.001), activation='relu', input_shape=(28*28,)))\n",
        "\n",
        "    elif regularizador == 3:\n",
        "      model.add(layers.Dense(512, kernel_regularizer=regularizers.l1_l2(l1=0.001, l2=0.001), activation='relu', input_shape=(28*28,)))\n",
        "\n",
        "    elif regularizador ==4:\n",
        "      model.add(layers.Dense(512, activation='relu', input_shape=(28*28,)))\n",
        "\n",
        "      model.add(layers.Dropout(0.5))\n",
        "\n",
        "  # Si es distinto que estos valores, escribe el error y retorna\n",
        "  # Al final, esta función pinta el summary del modelo y retorna el modelo creado\n",
        "    else: \n",
        "      print('Error: El numero debe estar entre 0-4')\n",
        "      return\n",
        "  \n",
        "    model.add(layers.Dense(10, activation = 'softmax'))\n",
        "    model.summary()\n",
        "    return model"
      ],
      "metadata": {
        "id": "6JnVLVfsAfkh"
      },
      "execution_count": 5,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "def compila_modelo(model): \n",
        "  # Define una función que recibe un modelo, lo compila con un optimizador\n",
        "  # 'rmsprop', con una función de pérdida 'sparse_categorical_crossentropy' y\n",
        "  # una métrica de precisión. La función retorna el modelo\n",
        "  model.compile(loss='sparse_categorical_crossentropy', optimizer='rmsprop', metrics=['accuracy'])\n",
        "  return model"
      ],
      "metadata": {
        "id": "qKyJ8KOT0aFt"
      },
      "execution_count": 6,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "from IPython.core.history import HistoryAccessor\n",
        "def entrena_modelo(model):\n",
        "  # Define una función que entrena el modelo que se le pasa por parámetro,\n",
        "  # con las imágenes y etiquetas de entrenamiento, con 30 iteraciones y 128\n",
        "  # de tamaño de minilote y con el validation_data creado más arriba.\n",
        "  # Esta función devuelve un history\n",
        "  history= model.fit (train_images, train_labels, batch_size=128, epochs=30, validation_data=(validation_images, validation_labels))\n",
        "  return history"
      ],
      "metadata": {
        "id": "_yQ7SpOt0cBp"
      },
      "execution_count": 7,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "def pinta_perdida_entrenamiento_validacion(historia):\n",
        "  historia_dict = historia.history\n",
        "  acc = historia.history['accuracy']\n",
        "  val_acc = historia.history['val_accuracy']\n",
        "  loss = historia.history['loss']\n",
        "  val_loss = historia.history['val_loss']\n",
        "  epochs = range(1, len(acc) + 1)\n",
        "  # \"bo\" es para \"punto azun\"\n",
        "  plt.plot(epochs, loss, 'bo', label='Pérdida de Entrenamiento')\n",
        "  # \"b\" es para \"linea continua azul\"\n",
        "  plt.plot(epochs, val_loss, 'b', label='Pérdida de Validación')\n",
        "  plt.title('Pérdida de Entrenamiento y Validación')\n",
        "  plt.xlabel('Epochs')\n",
        "  plt.ylabel('Loss')\n",
        "  plt.legend()\n",
        "  plt.show()"
      ],
      "metadata": {
        "id": "bJrRNc4WwPN2"
      },
      "execution_count": 8,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "def pinta_precision_entrenamiento_validacion(historia):\n",
        "  history_dict = historia.history\n",
        "  acc = historia.history['accuracy']\n",
        "  val_acc = historia.history['val_accuracy']\n",
        "  loss = historia.history['loss']\n",
        "  val_loss = historia.history['val_loss']\n",
        "  plt.clf()   # Limpia la figura\n",
        "  acc_values = history_dict['accuracy']\n",
        "  val_acc_values = history_dict['val_accuracy']\n",
        "  epochs = range(1, len(acc) + 1)\n",
        "  plt.plot(epochs, acc, 'bo', label='Precisión de Entrenamiento')\n",
        "  plt.plot(epochs, val_acc, 'b', label='Precisión de Validación')\n",
        "  plt.title('Precisión de Entrenamiento y Valización')\n",
        "  plt.xlabel('Epochs')\n",
        "  plt.ylabel('Loss')\n",
        "  plt.legend()\n",
        "  plt.show()"
      ],
      "metadata": {
        "id": "Mafxp6D3wYQx"
      },
      "execution_count": 9,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "## Una vez definidas todas las funciones anteriores, ejecuta las siguientes llamadas a dichas funciones y deduce que está pasando y, para este contexto, que es lo que mejor está funcionando"
      ],
      "metadata": {
        "id": "6nnQYysYA3_T"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "### Caso 0, sin regularizadores"
      ],
      "metadata": {
        "id": "OrGwDgaFBax4"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "network0 = crea_modelo(0)"
      ],
      "metadata": {
        "id": "uXvhlXg79Zi9",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "22adaf65-4970-4832-a3cf-eb56f1ce0ca4"
      },
      "execution_count": 10,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Model: \"sequential\"\n",
            "_________________________________________________________________\n",
            " Layer (type)                Output Shape              Param #   \n",
            "=================================================================\n",
            " dense (Dense)               (None, 512)               401920    \n",
            "                                                                 \n",
            " dense_1 (Dense)             (None, 10)                5130      \n",
            "                                                                 \n",
            "=================================================================\n",
            "Total params: 407,050\n",
            "Trainable params: 407,050\n",
            "Non-trainable params: 0\n",
            "_________________________________________________________________\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "network0 = compila_modelo(network0)"
      ],
      "metadata": {
        "id": "Ff0HC3NR9ez8"
      },
      "execution_count": 11,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "historia0 = entrena_modelo(network0)"
      ],
      "metadata": {
        "id": "x9zQDOlw9g6V",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "14783075-aca6-4089-a876-f68435167e6d"
      },
      "execution_count": 12,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Epoch 1/30\n",
            "391/391 [==============================] - 22s 51ms/step - loss: 0.2796 - accuracy: 0.9188 - val_loss: 0.1292 - val_accuracy: 0.9629\n",
            "Epoch 2/30\n",
            "391/391 [==============================] - 7s 17ms/step - loss: 0.1140 - accuracy: 0.9661 - val_loss: 0.1103 - val_accuracy: 0.9691\n",
            "Epoch 3/30\n",
            "391/391 [==============================] - 5s 14ms/step - loss: 0.0757 - accuracy: 0.9775 - val_loss: 0.0987 - val_accuracy: 0.9702\n",
            "Epoch 4/30\n",
            "391/391 [==============================] - 5s 12ms/step - loss: 0.0538 - accuracy: 0.9841 - val_loss: 0.0794 - val_accuracy: 0.9763\n",
            "Epoch 5/30\n",
            "391/391 [==============================] - 6s 16ms/step - loss: 0.0412 - accuracy: 0.9875 - val_loss: 0.0737 - val_accuracy: 0.9792\n",
            "Epoch 6/30\n",
            "391/391 [==============================] - 9s 22ms/step - loss: 0.0301 - accuracy: 0.9914 - val_loss: 0.0788 - val_accuracy: 0.9775\n",
            "Epoch 7/30\n",
            "391/391 [==============================] - 4s 11ms/step - loss: 0.0234 - accuracy: 0.9933 - val_loss: 0.0959 - val_accuracy: 0.9729\n",
            "Epoch 8/30\n",
            "391/391 [==============================] - 4s 11ms/step - loss: 0.0178 - accuracy: 0.9949 - val_loss: 0.0789 - val_accuracy: 0.9796\n",
            "Epoch 9/30\n",
            "391/391 [==============================] - 5s 12ms/step - loss: 0.0138 - accuracy: 0.9959 - val_loss: 0.0746 - val_accuracy: 0.9815\n",
            "Epoch 10/30\n",
            "391/391 [==============================] - 4s 11ms/step - loss: 0.0102 - accuracy: 0.9972 - val_loss: 0.0851 - val_accuracy: 0.9801\n",
            "Epoch 11/30\n",
            "391/391 [==============================] - 5s 12ms/step - loss: 0.0080 - accuracy: 0.9980 - val_loss: 0.0918 - val_accuracy: 0.9794\n",
            "Epoch 12/30\n",
            "391/391 [==============================] - 4s 11ms/step - loss: 0.0065 - accuracy: 0.9983 - val_loss: 0.0902 - val_accuracy: 0.9803\n",
            "Epoch 13/30\n",
            "391/391 [==============================] - 4s 12ms/step - loss: 0.0046 - accuracy: 0.9987 - val_loss: 0.1008 - val_accuracy: 0.9785\n",
            "Epoch 14/30\n",
            "391/391 [==============================] - 4s 11ms/step - loss: 0.0034 - accuracy: 0.9992 - val_loss: 0.0942 - val_accuracy: 0.9808\n",
            "Epoch 15/30\n",
            "391/391 [==============================] - 4s 11ms/step - loss: 0.0030 - accuracy: 0.9992 - val_loss: 0.0950 - val_accuracy: 0.9819\n",
            "Epoch 16/30\n",
            "391/391 [==============================] - 5s 12ms/step - loss: 0.0020 - accuracy: 0.9994 - val_loss: 0.1019 - val_accuracy: 0.9804\n",
            "Epoch 17/30\n",
            "391/391 [==============================] - 4s 11ms/step - loss: 0.0015 - accuracy: 0.9996 - val_loss: 0.0943 - val_accuracy: 0.9824\n",
            "Epoch 18/30\n",
            "391/391 [==============================] - 5s 12ms/step - loss: 0.0015 - accuracy: 0.9996 - val_loss: 0.1171 - val_accuracy: 0.9801\n",
            "Epoch 19/30\n",
            "391/391 [==============================] - 5s 12ms/step - loss: 8.6656e-04 - accuracy: 0.9998 - val_loss: 0.1044 - val_accuracy: 0.9821\n",
            "Epoch 20/30\n",
            "391/391 [==============================] - 5s 12ms/step - loss: 8.2980e-04 - accuracy: 0.9998 - val_loss: 0.1101 - val_accuracy: 0.9817\n",
            "Epoch 21/30\n",
            "391/391 [==============================] - 4s 11ms/step - loss: 6.4785e-04 - accuracy: 0.9998 - val_loss: 0.1134 - val_accuracy: 0.9818\n",
            "Epoch 22/30\n",
            "391/391 [==============================] - 4s 11ms/step - loss: 4.1357e-04 - accuracy: 0.9999 - val_loss: 0.1228 - val_accuracy: 0.9819\n",
            "Epoch 23/30\n",
            "391/391 [==============================] - 5s 13ms/step - loss: 4.6158e-04 - accuracy: 0.9999 - val_loss: 0.1153 - val_accuracy: 0.9830\n",
            "Epoch 24/30\n",
            "391/391 [==============================] - 4s 11ms/step - loss: 4.0058e-04 - accuracy: 0.9998 - val_loss: 0.1307 - val_accuracy: 0.9817\n",
            "Epoch 25/30\n",
            "391/391 [==============================] - 4s 11ms/step - loss: 3.0492e-04 - accuracy: 0.9999 - val_loss: 0.1301 - val_accuracy: 0.9825\n",
            "Epoch 26/30\n",
            "391/391 [==============================] - 5s 12ms/step - loss: 5.4996e-04 - accuracy: 0.9999 - val_loss: 0.1386 - val_accuracy: 0.9810\n",
            "Epoch 27/30\n",
            "391/391 [==============================] - 5s 12ms/step - loss: 1.9024e-04 - accuracy: 0.9999 - val_loss: 0.1378 - val_accuracy: 0.9819\n",
            "Epoch 28/30\n",
            "391/391 [==============================] - 4s 11ms/step - loss: 1.6845e-04 - accuracy: 1.0000 - val_loss: 0.1351 - val_accuracy: 0.9818\n",
            "Epoch 29/30\n",
            "391/391 [==============================] - 5s 12ms/step - loss: 7.6387e-05 - accuracy: 1.0000 - val_loss: 0.1469 - val_accuracy: 0.9803\n",
            "Epoch 30/30\n",
            "391/391 [==============================] - 5s 13ms/step - loss: 9.2535e-05 - accuracy: 1.0000 - val_loss: 0.1468 - val_accuracy: 0.9824\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "pinta_perdida_entrenamiento_validacion(historia0)"
      ],
      "metadata": {
        "id": "OvhDZvS8-0mG",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 295
        },
        "outputId": "e88fada5-3e86-4872-abf4-f8437d9f4190"
      },
      "execution_count": 13,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "pinta_precision_entrenamiento_validacion(historia0)"
      ],
      "metadata": {
        "id": "UuiL2CCH_fGN",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 295
        },
        "outputId": "dff286b3-6b4f-4d43-8677-b764521b732e"
      },
      "execution_count": 14,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "### Caso 1: Con regularizador l1"
      ],
      "metadata": {
        "id": "pw6iBGO5Bg8J"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "network1 = crea_modelo(1)"
      ],
      "metadata": {
        "id": "D6JPtw5zCz-1",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "f556a7e0-82a7-40da-a902-285fbb5e707d"
      },
      "execution_count": 15,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Model: \"sequential_1\"\n",
            "_________________________________________________________________\n",
            " Layer (type)                Output Shape              Param #   \n",
            "=================================================================\n",
            " dense_2 (Dense)             (None, 512)               401920    \n",
            "                                                                 \n",
            " dense_3 (Dense)             (None, 10)                5130      \n",
            "                                                                 \n",
            "=================================================================\n",
            "Total params: 407,050\n",
            "Trainable params: 407,050\n",
            "Non-trainable params: 0\n",
            "_________________________________________________________________\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "network1 = compila_modelo(network1)"
      ],
      "metadata": {
        "id": "zL3Gp7wvFRq3"
      },
      "execution_count": 16,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "historia1 = entrena_modelo(network1)"
      ],
      "metadata": {
        "id": "G2FG1Z4xFW72",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "4a8fe03d-e145-45bd-dd03-dcd31c136ff8"
      },
      "execution_count": 17,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Epoch 1/30\n",
            "391/391 [==============================] - 6s 15ms/step - loss: 2.1443 - accuracy: 0.8460 - val_loss: 0.9820 - val_accuracy: 0.8903\n",
            "Epoch 2/30\n",
            "391/391 [==============================] - 5s 13ms/step - loss: 0.9549 - accuracy: 0.8807 - val_loss: 0.8427 - val_accuracy: 0.9101\n",
            "Epoch 3/30\n",
            "391/391 [==============================] - 5s 14ms/step - loss: 0.8302 - accuracy: 0.9041 - val_loss: 0.7634 - val_accuracy: 0.9233\n",
            "Epoch 4/30\n",
            "391/391 [==============================] - 5s 13ms/step - loss: 0.7553 - accuracy: 0.9167 - val_loss: 0.7397 - val_accuracy: 0.9203\n",
            "Epoch 5/30\n",
            "391/391 [==============================] - 5s 13ms/step - loss: 0.7067 - accuracy: 0.9246 - val_loss: 0.6606 - val_accuracy: 0.9408\n",
            "Epoch 6/30\n",
            "391/391 [==============================] - 5s 13ms/step - loss: 0.6702 - accuracy: 0.9314 - val_loss: 0.6281 - val_accuracy: 0.9442\n",
            "Epoch 7/30\n",
            "391/391 [==============================] - 6s 14ms/step - loss: 0.6423 - accuracy: 0.9352 - val_loss: 0.6253 - val_accuracy: 0.9461\n",
            "Epoch 8/30\n",
            "391/391 [==============================] - 5s 14ms/step - loss: 0.6184 - accuracy: 0.9400 - val_loss: 0.5858 - val_accuracy: 0.9527\n",
            "Epoch 9/30\n",
            "391/391 [==============================] - 5s 13ms/step - loss: 0.5994 - accuracy: 0.9428 - val_loss: 0.5825 - val_accuracy: 0.9473\n",
            "Epoch 10/30\n",
            "391/391 [==============================] - 5s 13ms/step - loss: 0.5853 - accuracy: 0.9454 - val_loss: 0.5418 - val_accuracy: 0.9539\n",
            "Epoch 11/30\n",
            "391/391 [==============================] - 5s 13ms/step - loss: 0.5739 - accuracy: 0.9468 - val_loss: 0.5580 - val_accuracy: 0.9511\n",
            "Epoch 12/30\n",
            "391/391 [==============================] - 6s 14ms/step - loss: 0.5633 - accuracy: 0.9481 - val_loss: 0.5640 - val_accuracy: 0.9506\n",
            "Epoch 13/30\n",
            "391/391 [==============================] - 5s 13ms/step - loss: 0.5541 - accuracy: 0.9505 - val_loss: 0.5475 - val_accuracy: 0.9528\n",
            "Epoch 14/30\n",
            "391/391 [==============================] - 5s 13ms/step - loss: 0.5459 - accuracy: 0.9510 - val_loss: 0.5618 - val_accuracy: 0.9488\n",
            "Epoch 15/30\n",
            "391/391 [==============================] - 5s 13ms/step - loss: 0.5395 - accuracy: 0.9527 - val_loss: 0.5167 - val_accuracy: 0.9619\n",
            "Epoch 16/30\n",
            "391/391 [==============================] - 5s 13ms/step - loss: 0.5313 - accuracy: 0.9533 - val_loss: 0.5344 - val_accuracy: 0.9517\n",
            "Epoch 17/30\n",
            "391/391 [==============================] - 5s 13ms/step - loss: 0.5272 - accuracy: 0.9539 - val_loss: 0.5172 - val_accuracy: 0.9566\n",
            "Epoch 18/30\n",
            "391/391 [==============================] - 5s 13ms/step - loss: 0.5208 - accuracy: 0.9554 - val_loss: 0.5065 - val_accuracy: 0.9603\n",
            "Epoch 19/30\n",
            "391/391 [==============================] - 5s 13ms/step - loss: 0.5166 - accuracy: 0.9555 - val_loss: 0.5371 - val_accuracy: 0.9471\n",
            "Epoch 20/30\n",
            "391/391 [==============================] - 5s 13ms/step - loss: 0.5091 - accuracy: 0.9573 - val_loss: 0.4997 - val_accuracy: 0.9557\n",
            "Epoch 21/30\n",
            "391/391 [==============================] - 5s 13ms/step - loss: 0.5085 - accuracy: 0.9560 - val_loss: 0.4853 - val_accuracy: 0.9651\n",
            "Epoch 22/30\n",
            "391/391 [==============================] - 5s 14ms/step - loss: 0.5046 - accuracy: 0.9570 - val_loss: 0.5008 - val_accuracy: 0.9550\n",
            "Epoch 23/30\n",
            "391/391 [==============================] - 5s 14ms/step - loss: 0.5003 - accuracy: 0.9571 - val_loss: 0.5072 - val_accuracy: 0.9584\n",
            "Epoch 24/30\n",
            "391/391 [==============================] - 5s 13ms/step - loss: 0.4980 - accuracy: 0.9589 - val_loss: 0.5255 - val_accuracy: 0.9466\n",
            "Epoch 25/30\n",
            "391/391 [==============================] - 5s 13ms/step - loss: 0.4941 - accuracy: 0.9583 - val_loss: 0.4835 - val_accuracy: 0.9637\n",
            "Epoch 26/30\n",
            "391/391 [==============================] - 5s 14ms/step - loss: 0.4908 - accuracy: 0.9601 - val_loss: 0.5100 - val_accuracy: 0.9515\n",
            "Epoch 27/30\n",
            "391/391 [==============================] - 5s 13ms/step - loss: 0.4906 - accuracy: 0.9594 - val_loss: 0.4836 - val_accuracy: 0.9609\n",
            "Epoch 28/30\n",
            "391/391 [==============================] - 5s 13ms/step - loss: 0.4876 - accuracy: 0.9598 - val_loss: 0.4645 - val_accuracy: 0.9647\n",
            "Epoch 29/30\n",
            "391/391 [==============================] - 5s 13ms/step - loss: 0.4851 - accuracy: 0.9595 - val_loss: 0.4648 - val_accuracy: 0.9656\n",
            "Epoch 30/30\n",
            "391/391 [==============================] - 5s 14ms/step - loss: 0.4827 - accuracy: 0.9593 - val_loss: 0.5104 - val_accuracy: 0.9559\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "pinta_perdida_entrenamiento_validacion(historia1)"
      ],
      "metadata": {
        "id": "Vyv3yFtiFitw",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 295
        },
        "outputId": "cde44064-b846-4b65-bf33-c6f7f6ca4806"
      },
      "execution_count": 18,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "pinta_precision_entrenamiento_validacion(historia1)"
      ],
      "metadata": {
        "id": "pVUerJsqFo7K",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 295
        },
        "outputId": "74ecbd64-8a60-46af-fa65-e8cb600bbe48"
      },
      "execution_count": 19,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "### Caso 2: Con regularizador l2"
      ],
      "metadata": {
        "id": "hklwKNlMBzya"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "network2 = crea_modelo(2)"
      ],
      "metadata": {
        "id": "tjIs0FziG5Ja",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "4dbee6e8-2130-4740-bd0b-3d57a9d54397"
      },
      "execution_count": 20,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Model: \"sequential_2\"\n",
            "_________________________________________________________________\n",
            " Layer (type)                Output Shape              Param #   \n",
            "=================================================================\n",
            " dense_4 (Dense)             (None, 512)               401920    \n",
            "                                                                 \n",
            " dense_5 (Dense)             (None, 10)                5130      \n",
            "                                                                 \n",
            "=================================================================\n",
            "Total params: 407,050\n",
            "Trainable params: 407,050\n",
            "Non-trainable params: 0\n",
            "_________________________________________________________________\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "network2 = compila_modelo(network2)"
      ],
      "metadata": {
        "id": "UCdA0K_qyTUq"
      },
      "execution_count": 21,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "historia2 = entrena_modelo(network2)"
      ],
      "metadata": {
        "id": "WSuomx5oybpu",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "702dfb48-195b-4605-f294-72f02119e142"
      },
      "execution_count": 22,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Epoch 1/30\n",
            "391/391 [==============================] - 6s 14ms/step - loss: 0.5274 - accuracy: 0.9110 - val_loss: 0.2974 - val_accuracy: 0.9556\n",
            "Epoch 2/30\n",
            "391/391 [==============================] - 5s 13ms/step - loss: 0.2623 - accuracy: 0.9549 - val_loss: 0.2252 - val_accuracy: 0.9611\n",
            "Epoch 3/30\n",
            "391/391 [==============================] - 5s 13ms/step - loss: 0.2090 - accuracy: 0.9633 - val_loss: 0.2142 - val_accuracy: 0.9604\n",
            "Epoch 4/30\n",
            "391/391 [==============================] - 5s 13ms/step - loss: 0.1864 - accuracy: 0.9671 - val_loss: 0.1770 - val_accuracy: 0.9690\n",
            "Epoch 5/30\n",
            "391/391 [==============================] - 5s 13ms/step - loss: 0.1711 - accuracy: 0.9699 - val_loss: 0.1932 - val_accuracy: 0.9643\n",
            "Epoch 6/30\n",
            "391/391 [==============================] - 5s 13ms/step - loss: 0.1635 - accuracy: 0.9705 - val_loss: 0.1590 - val_accuracy: 0.9735\n",
            "Epoch 7/30\n",
            "391/391 [==============================] - 5s 13ms/step - loss: 0.1570 - accuracy: 0.9722 - val_loss: 0.2003 - val_accuracy: 0.9605\n",
            "Epoch 8/30\n",
            "391/391 [==============================] - 5s 14ms/step - loss: 0.1521 - accuracy: 0.9735 - val_loss: 0.1515 - val_accuracy: 0.9745\n",
            "Epoch 9/30\n",
            "391/391 [==============================] - 5s 13ms/step - loss: 0.1473 - accuracy: 0.9747 - val_loss: 0.1732 - val_accuracy: 0.9677\n",
            "Epoch 10/30\n",
            "391/391 [==============================] - 5s 13ms/step - loss: 0.1430 - accuracy: 0.9752 - val_loss: 0.1921 - val_accuracy: 0.9602\n",
            "Epoch 11/30\n",
            "391/391 [==============================] - 5s 13ms/step - loss: 0.1402 - accuracy: 0.9765 - val_loss: 0.1556 - val_accuracy: 0.9715\n",
            "Epoch 12/30\n",
            "391/391 [==============================] - 5s 13ms/step - loss: 0.1374 - accuracy: 0.9766 - val_loss: 0.1617 - val_accuracy: 0.9720\n",
            "Epoch 13/30\n",
            "391/391 [==============================] - 5s 13ms/step - loss: 0.1330 - accuracy: 0.9782 - val_loss: 0.1831 - val_accuracy: 0.9618\n",
            "Epoch 14/30\n",
            "391/391 [==============================] - 5s 13ms/step - loss: 0.1295 - accuracy: 0.9783 - val_loss: 0.1397 - val_accuracy: 0.9762\n",
            "Epoch 15/30\n",
            "391/391 [==============================] - 5s 13ms/step - loss: 0.1275 - accuracy: 0.9788 - val_loss: 0.1437 - val_accuracy: 0.9739\n",
            "Epoch 16/30\n",
            "391/391 [==============================] - 5s 13ms/step - loss: 0.1253 - accuracy: 0.9789 - val_loss: 0.1542 - val_accuracy: 0.9709\n",
            "Epoch 17/30\n",
            "391/391 [==============================] - 5s 13ms/step - loss: 0.1251 - accuracy: 0.9791 - val_loss: 0.1554 - val_accuracy: 0.9704\n",
            "Epoch 18/30\n",
            "391/391 [==============================] - 5s 13ms/step - loss: 0.1234 - accuracy: 0.9793 - val_loss: 0.1287 - val_accuracy: 0.9774\n",
            "Epoch 19/30\n",
            "391/391 [==============================] - 5s 13ms/step - loss: 0.1198 - accuracy: 0.9797 - val_loss: 0.1365 - val_accuracy: 0.9770\n",
            "Epoch 20/30\n",
            "391/391 [==============================] - 5s 13ms/step - loss: 0.1201 - accuracy: 0.9793 - val_loss: 0.1478 - val_accuracy: 0.9721\n",
            "Epoch 21/30\n",
            "391/391 [==============================] - 5s 13ms/step - loss: 0.1177 - accuracy: 0.9799 - val_loss: 0.1363 - val_accuracy: 0.9738\n",
            "Epoch 22/30\n",
            "391/391 [==============================] - 5s 13ms/step - loss: 0.1160 - accuracy: 0.9811 - val_loss: 0.1360 - val_accuracy: 0.9758\n",
            "Epoch 23/30\n",
            "391/391 [==============================] - 5s 13ms/step - loss: 0.1157 - accuracy: 0.9808 - val_loss: 0.1477 - val_accuracy: 0.9727\n",
            "Epoch 24/30\n",
            "391/391 [==============================] - 5s 14ms/step - loss: 0.1131 - accuracy: 0.9811 - val_loss: 0.1431 - val_accuracy: 0.9719\n",
            "Epoch 25/30\n",
            "391/391 [==============================] - 5s 13ms/step - loss: 0.1123 - accuracy: 0.9815 - val_loss: 0.1414 - val_accuracy: 0.9751\n",
            "Epoch 26/30\n",
            "391/391 [==============================] - 5s 13ms/step - loss: 0.1104 - accuracy: 0.9816 - val_loss: 0.1437 - val_accuracy: 0.9716\n",
            "Epoch 27/30\n",
            "391/391 [==============================] - 5s 13ms/step - loss: 0.1117 - accuracy: 0.9815 - val_loss: 0.1327 - val_accuracy: 0.9763\n",
            "Epoch 28/30\n",
            "391/391 [==============================] - 5s 13ms/step - loss: 0.1098 - accuracy: 0.9816 - val_loss: 0.1347 - val_accuracy: 0.9760\n",
            "Epoch 29/30\n",
            "391/391 [==============================] - 5s 13ms/step - loss: 0.1104 - accuracy: 0.9821 - val_loss: 0.1303 - val_accuracy: 0.9778\n",
            "Epoch 30/30\n",
            "391/391 [==============================] - 5s 13ms/step - loss: 0.1068 - accuracy: 0.9831 - val_loss: 0.1310 - val_accuracy: 0.9777\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "pinta_perdida_entrenamiento_validacion(historia2)"
      ],
      "metadata": {
        "id": "aXXzm8tpyj6X",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 295
        },
        "outputId": "28a5a4ed-e7f0-4653-d51e-210b240cf498"
      },
      "execution_count": 23,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "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CXv37i2W5sEHH+Txxx8vc37T0tLYvXt3yOl79erFmWeeSceOHenYsSNXXnlliemzs7P517/+Veb8VbQdO3aUmueSPPXUU4WOaSTEfSBo1iy86cZEUiT6q2rVqsXKlStZvXo11atX57nnniuYN2HCBH7968DP6MnNLfnhXO+88w4nnnhi+TNYAbKysli5ciUrV67ktddeKzFtSYGgtDJHwumnn15qnktigaACTJoEtWsXnla7tptuTGXy9Vdt2QKqx/urKvLihV/+8pds3LiRQ4cOceONN9K1a1c6derEG2+8AcC0adMYOHAgF1xwAX369OHIkSNcc801tG3blssuu4wjR44/pdL/l/ukSZM444wzOO+881i/fn1Bmueff56zzz6bjIwMrrjiioAnrD179nDRRRfRvn17brrpJvxHPJ4xYwZdu3alY8eO3HLLLeTl5YVc1uHDh3PnnXfSo0cPWrRoUXCyHTNmDEuWLKFjx4785S9/KVbmkvbN5ZdfTv/+/WndujX33ntvwbZGjhxJZmYm7du354EHHii0j8aOHUvHjh3JzMzkiy++oF+/frRs2bIgIGdnZ9OhQwcA8vLyuOeeezj77LNJT09nypQpACxatIhevXpx5ZVX0qZNG4YOHYqq8vTTT7Njxw569+5N7969AXjllVc466yz6NChA6NHjw55f5VIVWPq1aVLFw3XjBmqqamqIu7vjBlhr8KYgNauXRty2tRUVRcCCr9SU8uXhzp16qiqak5Ojg4cOFCfffZZHTt2rL788suqqvrTTz9p69at9eDBg/rSSy9p48aNdc+ePaqq+sQTT+gNN9ygqqpfffWVJicn67Jly7z8puquXbt0+fLl2qFDBz106JDu27dPW7ZsqX/+859VVXX37t0F+Rg3bpw+/fTTxfJ3xx136MSJE1VV9a233lJAd+3apWvXrtVLL71Ujx07pqqqI0eO1OnTpxdbvmfPnnrGGWdoRkaGZmRk6B/+8AdVVR02bJheeeWVmpeXp2vWrNGWLVuqqurChQt1wIABBcsXLXNJ+6Z58+a6d+9ePXLkiDZr1ky3bt2qqlqwbG5urvbs2VO/+uqrgn307LPPqqrqqFGj9KyzztL9+/frDz/8oKeccoqqqm7evFnbt2+vqqpTpkzRhx9+WFVVjx49ql26dNFNmzbpwoUL9YQTTtBt27ZpXl6e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\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "pinta_precision_entrenamiento_validacion(historia2)"
      ],
      "metadata": {
        "id": "CLTsg5LTypH9",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 295
        },
        "outputId": "e10b1461-34c7-4bfd-a573-be2cf04cd49a"
      },
      "execution_count": 24,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "### Caso 3: Con regularizador l1_l2"
      ],
      "metadata": {
        "id": "692oWz8oB82n"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "network3 = crea_modelo(3)"
      ],
      "metadata": {
        "id": "5fdxkjoKzFcu",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "475bb335-f7ab-4f17-8bf9-9541040befaa"
      },
      "execution_count": 25,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Model: \"sequential_3\"\n",
            "_________________________________________________________________\n",
            " Layer (type)                Output Shape              Param #   \n",
            "=================================================================\n",
            " dense_6 (Dense)             (None, 512)               401920    \n",
            "                                                                 \n",
            " dense_7 (Dense)             (None, 10)                5130      \n",
            "                                                                 \n",
            "=================================================================\n",
            "Total params: 407,050\n",
            "Trainable params: 407,050\n",
            "Non-trainable params: 0\n",
            "_________________________________________________________________\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "network3 = compila_modelo(network3)"
      ],
      "metadata": {
        "id": "VJzs9A2yzPhx"
      },
      "execution_count": 26,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "historia3 = entrena_modelo(network3)"
      ],
      "metadata": {
        "id": "1JCUbcCQzY6E",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "13267231-85ff-4081-cb25-0bca0e71a95c"
      },
      "execution_count": 27,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Epoch 1/30\n",
            "391/391 [==============================] - 6s 15ms/step - loss: 2.1608 - accuracy: 0.8422 - val_loss: 1.0534 - val_accuracy: 0.8796\n",
            "Epoch 2/30\n",
            "391/391 [==============================] - 6s 15ms/step - loss: 0.9835 - accuracy: 0.8783 - val_loss: 0.8285 - val_accuracy: 0.9166\n",
            "Epoch 3/30\n",
            "391/391 [==============================] - 6s 15ms/step - loss: 0.8595 - accuracy: 0.8977 - val_loss: 0.8160 - val_accuracy: 0.9093\n",
            "Epoch 4/30\n",
            "391/391 [==============================] - 6s 14ms/step - loss: 0.7859 - accuracy: 0.9105 - val_loss: 0.8174 - val_accuracy: 0.9022\n",
            "Epoch 5/30\n",
            "391/391 [==============================] - 6s 15ms/step - loss: 0.7347 - accuracy: 0.9214 - val_loss: 0.6922 - val_accuracy: 0.9338\n",
            "Epoch 6/30\n",
            "391/391 [==============================] - 6s 15ms/step - loss: 0.6951 - accuracy: 0.9277 - val_loss: 0.6765 - val_accuracy: 0.9382\n",
            "Epoch 7/30\n",
            "391/391 [==============================] - 6s 15ms/step - loss: 0.6649 - accuracy: 0.9336 - val_loss: 0.6355 - val_accuracy: 0.9413\n",
            "Epoch 8/30\n",
            "391/391 [==============================] - 6s 15ms/step - loss: 0.6425 - accuracy: 0.9356 - val_loss: 0.6099 - val_accuracy: 0.9453\n",
            "Epoch 9/30\n",
            "391/391 [==============================] - 6s 15ms/step - loss: 0.6225 - accuracy: 0.9401 - val_loss: 0.5998 - val_accuracy: 0.9487\n",
            "Epoch 10/30\n",
            "391/391 [==============================] - 6s 15ms/step - loss: 0.6057 - accuracy: 0.9410 - val_loss: 0.5720 - val_accuracy: 0.9518\n",
            "Epoch 11/30\n",
            "391/391 [==============================] - 6s 15ms/step - loss: 0.5935 - accuracy: 0.9436 - val_loss: 0.6155 - val_accuracy: 0.9369\n",
            "Epoch 12/30\n",
            "391/391 [==============================] - 6s 15ms/step - loss: 0.5813 - accuracy: 0.9452 - val_loss: 0.5847 - val_accuracy: 0.9483\n",
            "Epoch 13/30\n",
            "391/391 [==============================] - 6s 15ms/step - loss: 0.5717 - accuracy: 0.9470 - val_loss: 0.5704 - val_accuracy: 0.9539\n",
            "Epoch 14/30\n",
            "391/391 [==============================] - 6s 15ms/step - loss: 0.5633 - accuracy: 0.9479 - val_loss: 0.5407 - val_accuracy: 0.9576\n",
            "Epoch 15/30\n",
            "391/391 [==============================] - 6s 15ms/step - loss: 0.5550 - accuracy: 0.9496 - val_loss: 0.5467 - val_accuracy: 0.9552\n",
            "Epoch 16/30\n",
            "391/391 [==============================] - 6s 15ms/step - loss: 0.5506 - accuracy: 0.9512 - val_loss: 0.5494 - val_accuracy: 0.9514\n",
            "Epoch 17/30\n",
            "391/391 [==============================] - 6s 15ms/step - loss: 0.5440 - accuracy: 0.9512 - val_loss: 0.5594 - val_accuracy: 0.9456\n",
            "Epoch 18/30\n",
            "391/391 [==============================] - 6s 16ms/step - loss: 0.5385 - accuracy: 0.9512 - val_loss: 0.5318 - val_accuracy: 0.9562\n",
            "Epoch 19/30\n",
            "391/391 [==============================] - 7s 19ms/step - loss: 0.5335 - accuracy: 0.9523 - val_loss: 0.5331 - val_accuracy: 0.9572\n",
            "Epoch 20/30\n",
            "391/391 [==============================] - 7s 19ms/step - loss: 0.5288 - accuracy: 0.9533 - val_loss: 0.5265 - val_accuracy: 0.9578\n",
            "Epoch 21/30\n",
            "391/391 [==============================] - 8s 21ms/step - loss: 0.5242 - accuracy: 0.9536 - val_loss: 0.5458 - val_accuracy: 0.9459\n",
            "Epoch 22/30\n",
            "391/391 [==============================] - 6s 15ms/step - loss: 0.5193 - accuracy: 0.9546 - val_loss: 0.5014 - val_accuracy: 0.9597\n",
            "Epoch 23/30\n",
            "391/391 [==============================] - 7s 18ms/step - loss: 0.5149 - accuracy: 0.9555 - val_loss: 0.5237 - val_accuracy: 0.9539\n",
            "Epoch 24/30\n",
            "391/391 [==============================] - 6s 15ms/step - loss: 0.5140 - accuracy: 0.9552 - val_loss: 0.4809 - val_accuracy: 0.9661\n",
            "Epoch 25/30\n",
            "391/391 [==============================] - 6s 15ms/step - loss: 0.5102 - accuracy: 0.9546 - val_loss: 0.5602 - val_accuracy: 0.9418\n",
            "Epoch 26/30\n",
            "391/391 [==============================] - 6s 15ms/step - loss: 0.5067 - accuracy: 0.9559 - val_loss: 0.5010 - val_accuracy: 0.9597\n",
            "Epoch 27/30\n",
            "391/391 [==============================] - 6s 15ms/step - loss: 0.5045 - accuracy: 0.9561 - val_loss: 0.5006 - val_accuracy: 0.9592\n",
            "Epoch 28/30\n",
            "391/391 [==============================] - 6s 15ms/step - loss: 0.5012 - accuracy: 0.9563 - val_loss: 0.4980 - val_accuracy: 0.9603\n",
            "Epoch 29/30\n",
            "391/391 [==============================] - 6s 15ms/step - loss: 0.4996 - accuracy: 0.9574 - val_loss: 0.4856 - val_accuracy: 0.9656\n",
            "Epoch 30/30\n",
            "391/391 [==============================] - 6s 14ms/step - loss: 0.4963 - accuracy: 0.9572 - val_loss: 0.4640 - val_accuracy: 0.9679\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "pinta_perdida_entrenamiento_validacion(historia3)"
      ],
      "metadata": {
        "id": "I8XzPVtyze8y",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 295
        },
        "outputId": "e5eddf37-97ec-4bd4-de65-a508e3a4f427"
      },
      "execution_count": 28,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "pinta_precision_entrenamiento_validacion(historia3)"
      ],
      "metadata": {
        "id": "nKk7AmM8zi3A",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 295
        },
        "outputId": "a0cdc40c-5d46-4f88-c983-4d76e835d951"
      },
      "execution_count": 29,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "### Caso 4: Con Droput"
      ],
      "metadata": {
        "id": "OPVcbgcXCFRL"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "network4 = crea_modelo(4)"
      ],
      "metadata": {
        "id": "5MVbUNX11Pgr",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "902b7f59-546b-4459-9da8-0eac7e8493c8"
      },
      "execution_count": 30,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Model: \"sequential_4\"\n",
            "_________________________________________________________________\n",
            " Layer (type)                Output Shape              Param #   \n",
            "=================================================================\n",
            " dense_8 (Dense)             (None, 512)               401920    \n",
            "                                                                 \n",
            " dropout (Dropout)           (None, 512)               0         \n",
            "                                                                 \n",
            " dense_9 (Dense)             (None, 10)                5130      \n",
            "                                                                 \n",
            "=================================================================\n",
            "Total params: 407,050\n",
            "Trainable params: 407,050\n",
            "Non-trainable params: 0\n",
            "_________________________________________________________________\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "network4 = compila_modelo(network4)"
      ],
      "metadata": {
        "id": "pT-13IKI1UpW"
      },
      "execution_count": 31,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "historia4 = entrena_modelo(network4)"
      ],
      "metadata": {
        "id": "kNWidx1S1aCH",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "30963c34-faf9-4560-b3ea-0d966c094414"
      },
      "execution_count": 32,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Epoch 1/30\n",
            "391/391 [==============================] - 6s 13ms/step - loss: 0.3441 - accuracy: 0.8997 - val_loss: 0.1605 - val_accuracy: 0.9550\n",
            "Epoch 2/30\n",
            "391/391 [==============================] - 5s 12ms/step - loss: 0.1677 - accuracy: 0.9506 - val_loss: 0.1127 - val_accuracy: 0.9681\n",
            "Epoch 3/30\n",
            "391/391 [==============================] - 5s 13ms/step - loss: 0.1296 - accuracy: 0.9612 - val_loss: 0.0939 - val_accuracy: 0.9734\n",
            "Epoch 4/30\n",
            "391/391 [==============================] - 5s 12ms/step - loss: 0.1047 - accuracy: 0.9690 - val_loss: 0.0893 - val_accuracy: 0.9755\n",
            "Epoch 5/30\n",
            "391/391 [==============================] - 5s 12ms/step - loss: 0.0927 - accuracy: 0.9722 - val_loss: 0.0822 - val_accuracy: 0.9774\n",
            "Epoch 6/30\n",
            "391/391 [==============================] - 5s 12ms/step - loss: 0.0814 - accuracy: 0.9756 - val_loss: 0.0838 - val_accuracy: 0.9771\n",
            "Epoch 7/30\n",
            "391/391 [==============================] - 5s 12ms/step - loss: 0.0761 - accuracy: 0.9771 - val_loss: 0.0766 - val_accuracy: 0.9781\n",
            "Epoch 8/30\n",
            "391/391 [==============================] - 5s 13ms/step - loss: 0.0693 - accuracy: 0.9798 - val_loss: 0.0783 - val_accuracy: 0.9781\n",
            "Epoch 9/30\n",
            "391/391 [==============================] - 5s 13ms/step - loss: 0.0630 - accuracy: 0.9813 - val_loss: 0.0784 - val_accuracy: 0.9802\n",
            "Epoch 10/30\n",
            "391/391 [==============================] - 5s 13ms/step - loss: 0.0594 - accuracy: 0.9823 - val_loss: 0.0801 - val_accuracy: 0.9798\n",
            "Epoch 11/30\n",
            "391/391 [==============================] - 5s 13ms/step - loss: 0.0522 - accuracy: 0.9836 - val_loss: 0.0837 - val_accuracy: 0.9789\n",
            "Epoch 12/30\n",
            "391/391 [==============================] - 5s 13ms/step - loss: 0.0517 - accuracy: 0.9842 - val_loss: 0.0821 - val_accuracy: 0.9801\n",
            "Epoch 13/30\n",
            "391/391 [==============================] - 5s 12ms/step - loss: 0.0492 - accuracy: 0.9848 - val_loss: 0.0797 - val_accuracy: 0.9810\n",
            "Epoch 14/30\n",
            "391/391 [==============================] - 5s 13ms/step - loss: 0.0479 - accuracy: 0.9855 - val_loss: 0.0839 - val_accuracy: 0.9808\n",
            "Epoch 15/30\n",
            "391/391 [==============================] - 5s 13ms/step - loss: 0.0449 - accuracy: 0.9868 - val_loss: 0.0812 - val_accuracy: 0.9811\n",
            "Epoch 16/30\n",
            "391/391 [==============================] - 5s 12ms/step - loss: 0.0436 - accuracy: 0.9873 - val_loss: 0.0882 - val_accuracy: 0.9807\n",
            "Epoch 17/30\n",
            "391/391 [==============================] - 5s 13ms/step - loss: 0.0413 - accuracy: 0.9871 - val_loss: 0.0840 - val_accuracy: 0.9814\n",
            "Epoch 18/30\n",
            "391/391 [==============================] - 5s 13ms/step - loss: 0.0395 - accuracy: 0.9879 - val_loss: 0.0849 - val_accuracy: 0.9820\n",
            "Epoch 19/30\n",
            "391/391 [==============================] - 5s 13ms/step - loss: 0.0366 - accuracy: 0.9893 - val_loss: 0.0832 - val_accuracy: 0.9829\n",
            "Epoch 20/30\n",
            "391/391 [==============================] - 5s 13ms/step - loss: 0.0337 - accuracy: 0.9897 - val_loss: 0.0866 - val_accuracy: 0.9820\n",
            "Epoch 21/30\n",
            "391/391 [==============================] - 5s 14ms/step - loss: 0.0346 - accuracy: 0.9893 - val_loss: 0.0879 - val_accuracy: 0.9824\n",
            "Epoch 22/30\n",
            "391/391 [==============================] - 5s 13ms/step - loss: 0.0335 - accuracy: 0.9897 - val_loss: 0.0867 - val_accuracy: 0.9822\n",
            "Epoch 23/30\n",
            "391/391 [==============================] - 5s 13ms/step - loss: 0.0317 - accuracy: 0.9904 - val_loss: 0.0873 - val_accuracy: 0.9835\n",
            "Epoch 24/30\n",
            "391/391 [==============================] - 5s 13ms/step - loss: 0.0310 - accuracy: 0.9902 - val_loss: 0.0878 - val_accuracy: 0.9831\n",
            "Epoch 25/30\n",
            "391/391 [==============================] - 5s 13ms/step - loss: 0.0304 - accuracy: 0.9911 - val_loss: 0.0911 - val_accuracy: 0.9819\n",
            "Epoch 26/30\n",
            "391/391 [==============================] - 5s 13ms/step - loss: 0.0307 - accuracy: 0.9910 - val_loss: 0.0916 - val_accuracy: 0.9823\n",
            "Epoch 27/30\n",
            "391/391 [==============================] - 6s 14ms/step - loss: 0.0283 - accuracy: 0.9913 - val_loss: 0.0929 - val_accuracy: 0.9829\n",
            "Epoch 28/30\n",
            "391/391 [==============================] - 5s 14ms/step - loss: 0.0281 - accuracy: 0.9918 - val_loss: 0.0928 - val_accuracy: 0.9829\n",
            "Epoch 29/30\n",
            "391/391 [==============================] - 6s 16ms/step - loss: 0.0267 - accuracy: 0.9914 - val_loss: 0.0935 - val_accuracy: 0.9828\n",
            "Epoch 30/30\n",
            "391/391 [==============================] - 5s 13ms/step - loss: 0.0253 - accuracy: 0.9922 - val_loss: 0.0960 - val_accuracy: 0.9826\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "pinta_perdida_entrenamiento_validacion(historia4)"
      ],
      "metadata": {
        "id": "R9pI34Yr1gBO",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 295
        },
        "outputId": "fc20b655-6214-4195-cd7d-8a7baca62c23"
      },
      "execution_count": 33,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "pinta_precision_entrenamiento_validacion(historia4)"
      ],
      "metadata": {
        "id": "EwEIEOKx1lQr",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 295
        },
        "outputId": "87e2db06-b484-482f-afeb-a44a6f34a9e3"
      },
      "execution_count": 34,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "### Caso 5: Error de código de regularizador"
      ],
      "metadata": {
        "id": "e6rlKx2nCOgU"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "network5 = crea_modelo(5)"
      ],
      "metadata": {
        "id": "SqGDm8VM1rwR",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "f10fd17d-f877-4ec5-8015-a6f111c93620"
      },
      "execution_count": 35,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Error: El numero debe estar entre 0-4\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "XJesFVk1u0qA"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "### CONCLUSIONES"
      ],
      "metadata": {
        "id": "IklUu29cCcVe"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "El validation accuracy es igual de alto para el caso (4) que para el caso (0) pero al ser el validation loss mas bajo para el caso (4), opino que es el mejor.\n",
        "\n",
        "best_regularizer = dropout \n"
      ],
      "metadata": {
        "id": "cB_OYjjaChzN"
      }
    }
  ]
}